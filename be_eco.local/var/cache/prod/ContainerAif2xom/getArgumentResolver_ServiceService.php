<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'argument_resolver.service' shared service.

include_once \dirname(__DIR__, 4).'\\vendor\\symfony\\http-kernel\\Controller\\ArgumentValueResolverInterface.php';
include_once \dirname(__DIR__, 4).'\\vendor\\symfony\\http-kernel\\Controller\\ArgumentResolver\\ServiceValueResolver.php';

return $this->privates['argument_resolver.service'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
    'Contao\\CoreBundle\\Controller\\FrontendController::cronAction' => ['privates', '.service_locator.mt6FK0z', 'get_ServiceLocator_Mt6FK0zService.php', true],
    'Contao\\CoreBundle\\Controller\\FrontendModule\\TwoFactorController::__invoke' => ['privates', '.service_locator.3G5BiB9', 'get_ServiceLocator_3G5BiB9Service.php', true],
    'Contao\\CoreBundle\\Controller\\FrontendController:cronAction' => ['privates', '.service_locator.mt6FK0z', 'get_ServiceLocator_Mt6FK0zService.php', true],
    'Contao\\CoreBundle\\Controller\\FrontendModule\\TwoFactorController:__invoke' => ['privates', '.service_locator.3G5BiB9', 'get_ServiceLocator_3G5BiB9Service.php', true],
    'Contao\\CoreBundle\\Controller\\FrontendModule\\TwoFactorController' => ['privates', '.service_locator.3G5BiB9', 'get_ServiceLocator_3G5BiB9Service.php', true],
], [
    'Contao\\CoreBundle\\Controller\\FrontendController::cronAction' => '?',
    'Contao\\CoreBundle\\Controller\\FrontendModule\\TwoFactorController::__invoke' => '?',
    'Contao\\CoreBundle\\Controller\\FrontendController:cronAction' => '?',
    'Contao\\CoreBundle\\Controller\\FrontendModule\\TwoFactorController:__invoke' => '?',
    'Contao\\CoreBundle\\Controller\\FrontendModule\\TwoFactorController' => '?',
]));
